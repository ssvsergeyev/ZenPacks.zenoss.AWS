<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Devices', 'AWS') -->
<object id='/zport/dmd/Devices/AWS' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property visible="True" type="lines" id="zDeviceTemplates" >
[]
</property>
<object id='EC2' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property visible="True" type="boolean" id="zPingMonitorIgnore" >
True
</property>
<property visible="True" type="string" id="zPythonClass" >
ZenPacks.zenoss.AWS.EC2Account
</property>
<property visible="True" type="lines" id="zCollectorPlugins" >
['aws.EC2']
</property>
<tomanycont id='rrdTemplates'>
<object id='EC2Image' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2Image
</property>
<tomanycont id='datasources'>
</tomanycont>
</object>
<object id='EC2Instance' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2Instance
</property>
<tomanycont id='datasources'>
<object id='CPUUtilization' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
CPUUtilization
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='CPUUtilization' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='CheckReserved' module='ZenPacks.zenoss.AWS.datasources.AWSDataSource' class='AWSDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
AWSDataSource
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
3600
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.EC2UnreservedInstancesPlugin
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
</object>
<object id='DiskReadBytes' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskReadBytes
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskReadBytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskReadOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskReadOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskReadOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskWriteBytes' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskWriteBytes
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskWriteBytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskWriteOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskWriteOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskWriteOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='NetworkIn' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
NetworkIn
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='NetworkIn' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='NetworkOut' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
NetworkOut
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='NetworkOut' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='StatusCheckFailed_Instance' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
StatusCheckFailed_Instance
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='StatusCheckFailed_Instance' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='StatusCheckFailed_System' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
StatusCheckFailed_System
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='StatusCheckFailed_System' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='StatusCheckFailed_Instance' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Perf/Snmp
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['StatusCheckFailed_Instance_StatusCheckFailed_Instance']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
1
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='StatusCheckFailed_System' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Perf/Snmp
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['StatusCheckFailed_System_StatusCheckFailed_System']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
1
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU Utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
percentage
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Used' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%%
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPUUtilization_CPUUtilization
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Disk Throughput - Operations' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
operations/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
DiskReadOps_DiskReadOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
DiskWriteOps_DiskWriteOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Disk Throughput - Volume' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bytes/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
DiskReadBytes_DiskReadBytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
DiskWriteBytes_DiskWriteBytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Network Throughput' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bits/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='In' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
NetworkIn_NetworkIn
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Out' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
NetworkOut_NetworkOut
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Status Check Failures' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
failures
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Instance' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%2.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
StatusCheckFailed_Instance_StatusCheckFailed_Instance
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='System' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%2.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
StatusCheckFailed_System_StatusCheckFailed_System
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='EC2Instance-Detailed' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2Instance
</property>
<tomanycont id='datasources'>
<object id='CPUUtilization' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
CPUUtilization
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='CPUUtilization' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskReadBytes' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskReadBytes
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskReadBytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskReadOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskReadOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskReadOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskWriteBytes' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskWriteBytes
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskWriteBytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskWriteOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskWriteOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskWriteOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='NetworkIn' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
NetworkIn
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='NetworkIn' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='NetworkOut' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
NetworkOut
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='NetworkOut' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='StatusCheckFailed_Instance' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
StatusCheckFailed_Instance
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='StatusCheckFailed_Instance' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='StatusCheckFailed_System' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
StatusCheckFailed_System
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='StatusCheckFailed_System' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='StatusCheckFailed_Instance' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Perf/Snmp
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['StatusCheckFailed_Instance_StatusCheckFailed_Instance']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
1
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='StatusCheckFailed_System' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Perf/Snmp
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['StatusCheckFailed_System_StatusCheckFailed_System']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
1
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU Utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
percentage
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Used' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%%
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPUUtilization_CPUUtilization
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Disk Throughput - Operations' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
operations/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
DiskReadOps_DiskReadOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
DiskWriteOps_DiskWriteOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Disk Throughput - Volume' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bytes/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
DiskReadBytes_DiskReadBytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
DiskWriteBytes_DiskWriteBytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Network Throughput' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bits/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='In' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
NetworkIn_NetworkIn
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Out' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
NetworkOut_NetworkOut
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Status Check Failures' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
failures
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Instance' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%2.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
StatusCheckFailed_Instance_StatusCheckFailed_Instance
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='System' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%2.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
StatusCheckFailed_System_StatusCheckFailed_System
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='EC2Region' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2Region
</property>
<tomanycont id='datasources'>
<object id='CPUUtilization' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
CPUUtilization
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='CPUUtilization' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskReadBytes' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskReadBytes
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskReadBytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskReadOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskReadOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskReadOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskWriteBytes' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskWriteBytes
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskWriteBytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='DiskWriteOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
DiskWriteOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='DiskWriteOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='NetworkIn' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
NetworkIn
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='NetworkIn' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='NetworkOut' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EC2
</property>
<property type="string" id="metric" >
NetworkOut
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='NetworkOut' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='RegionsSoftLimits' module='ZenPacks.zenoss.PythonCollector.datasources.PythonDataSource' class='PythonDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Python
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.EC2RegionPlugin
</property>
<tomanycont id='datapoints'>
<object id='elastic_ips_count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
<object id='instances_count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
<object id='subnets_count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
<object id='volumes_count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
<object id='vpc_security_groups_count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
<object id='vpc_security_rules_count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='elastic_ipsCount' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['RegionsSoftLimits_elastic_ips']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
5
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='instancesCount' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['RegionsSoftLimits_instances_count']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
20
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='subnetsCount' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['RegionsSoftLimits_subnets_count']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
20
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='volumesCount' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['RegionsSoftLimits_volumes_count']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
5000
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='vpc_security_groupsCount' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['RegionsSoftLimits_vpc_security_groups_count']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
50
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='vpc_security_rulesCount' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['RegionsSoftLimits_vpc_security_rules_count']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
50
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Average CPU Utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
percentage
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Used' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%%
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
CPUUtilization_CPUUtilization
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Average Disk Throughput - Operations' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
operations/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
DiskReadOps_DiskReadOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
DiskWriteOps_DiskWriteOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Average Disk Throughput - Volume' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bytes/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
DiskReadBytes_DiskReadBytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
DiskWriteBytes_DiskWriteBytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Average Network Throughput' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bits/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='In' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
NetworkIn_NetworkIn
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Out' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
60,/
</property>
<property type="string" id="dpName" mode="w" >
NetworkOut_NetworkOut
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Soft Limits' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='ElasticIPsCount' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
Elastic IPs
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
RegionsSoftLimits_elastic_ips_count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='InstancesCount' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
Instances
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
RegionsSoftLimits_instances_count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='SubnetsCount' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
Subnets
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
RegionsSoftLimits_subnets_count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='VPCSecurityGroupsCount' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
VPC Sec. Groups
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
RegionsSoftLimits_vpc_security_groups_count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='VPCSecurityGroupsRulesCount' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
VPC Sec. Gr. Rules
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
RegionsSoftLimits_vpc_security_rules_count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='VolumesCount' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
Volumes
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
RegionsSoftLimits_volumes_count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='EC2ReservedInstance' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2ReservedInstance
</property>
<tomanycont id='datasources'>
<object id='CheckUsage' module='ZenPacks.zenoss.AWS.datasources.AWSDataSource' class='AWSDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
AWSDataSource
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.EC2UnusedReservedInstancesPlugin
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
</object>
</tomanycont>
</object>
<object id='EC2Snapshot' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2Snapshot
</property>
<tomanycont id='datasources'>
</tomanycont>
</object>
<object id='EC2VPC' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2VPC
</property>
<tomanycont id='datasources'>
<object id='VPCState' module='ZenPacks.zenoss.AWS.datasources.AWSDataSource' class='AWSDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
AWSDataSource
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.EC2VPCStatePlugin
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
</object>
</tomanycont>
</object>
<object id='EC2VPCSubnet' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2VPCSubnet
</property>
<tomanycont id='datasources'>
<object id='IPAddressesCount' module='ZenPacks.zenoss.AWS.datasources.AWSDataSource' class='AWSDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
AWSDataSource
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.EC2VPCSubnetPlugin
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='available_ip_address_count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='IP address count' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Available IP Address count' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
IPAddressesCount_available_ip_address_count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='EC2Volume' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2Volume
</property>
<tomanycont id='datasources'>
<object id='VolumeIdleTime' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeIdleTime
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeIdleTime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='VolumeQueueLength' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeQueueLength
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeQueueLength' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='VolumeReadBytes' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeReadBytes
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeReadBytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='VolumeReadOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeReadOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeReadOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='VolumeTotalReadTime' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeTotalReadTime
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeTotalReadTime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='VolumeTotalWriteTime' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeTotalWriteTime
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeTotalWriteTime' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='VolumeWriteBytes' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeWriteBytes
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeWriteBytes' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='VolumeWriteOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeWriteOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeWriteOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Queue Length' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
requests/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Waiting' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
VolumeQueueLength_VolumeQueueLength
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Throughput - Operations' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
operations/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
VolumeReadOps_VolumeReadOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
VolumeWriteOps_VolumeWriteOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Throughput - Volume' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bytes/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
VolumeReadBytes_VolumeReadBytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
VolumeWriteBytes_VolumeWriteBytes
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Time' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
percentage
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Idle' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%9.2lf%%
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
VolumeIdleTime_VolumeIdleTime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%9.2lf%%
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
VolumeTotalReadTime_VolumeTotalReadTime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%9.2lf%%
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
300,/
</property>
<property type="string" id="dpName" mode="w" >
VolumeTotalWriteTime_VolumeTotalWriteTime
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='EC2Volume-IOPS' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2Volume
</property>
<tomanycont id='datasources'>
<object id='VolumeConsumedReadWriteOps' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeConsumedReadWriteOps
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeConsumedReadWriteOps' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='VolumeThroughputPercentage' module='ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource' class='AmazonCloudWatchDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Amazon CloudWatch
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="string" id="eventClass" mode="w" >
/Ignore
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.datasources.AmazonCloudWatchDataSource.AmazonCloudWatchDataSourcePlugin
</property>
<property type="string" id="namespace" >
AWS/EBS
</property>
<property type="string" id="metric" >
VolumeThroughputPercentage
</property>
<property type="string" id="statistic" >
Average
</property>
<property type="string" id="dimension" >
${here/getDimension}
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='VolumeThroughputPercentage' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<property type="string" id="rrdmin" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Provisioned IOPS - Consumed' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
operations/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='IOPS' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
VolumeConsumedReadWriteOps_VolumeConsumedReadWriteOps
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Provisoned IOPS - Throughput' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
percentage
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='IOPS' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.2lf%%
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
VolumeThroughputPercentage_VolumeThroughputPercentage
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='EC2Zone' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.EC2Zone
</property>
<tomanycont id='datasources'>
<object id='ZoneStatus' module='ZenPacks.zenoss.AWS.datasources.AWSDataSource' class='AWSDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
AWSDataSource
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
30
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.ZonePlugin
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
</object>
</tomanycont>
</object>
<object id='S3Bucket' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.S3Bucket
</property>
<tomanycont id='datasources'>
<object id='bucketSize' module='ZenPacks.zenoss.PythonCollector.datasources.PythonDataSource' class='PythonDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
Python
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.S3BucketPlugin
</property>
<property visible="True" type="string" id="region" >
${here/getRegionId}
</property>
<tomanycont id='datapoints'>
<object id='keys_count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='total_size' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='bucketSize' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['bucketSize_total_size']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
5497559962838.5
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='keysCount' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['bucketSize_keys_count']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
10000000
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Keys count' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Keys Count' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
bucketSize_keys_count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Size' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bytes
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Total Size' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
bucketSize_total_size
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='SQSQueue' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.SQSQueue
</property>
<tomanycont id='datasources'>
<object id='SQSQueueStatus' module='ZenPacks.zenoss.AWS.datasources.AWSDataSource' class='AWSDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
AWSDataSource
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.SQSQueuePlugin
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
</object>
</tomanycont>
</object>
<object id='VPNGateway' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.AWS.VPNGateway
</property>
<tomanycont id='datasources'>
<object id='GatewayState' module='ZenPacks.zenoss.AWS.datasources.AWSDataSource' class='AWSDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
AWSDataSource
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.AWS.dsplugins.VPNGatewayStatePlugin
</property>
<property type="string" id="region" >
${here/getRegionId}
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'AWS') -->
<object id='/zport/dmd/Events/AWS' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='SQSMessage' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
<object id='Suggestion' module='Products.ZenEvents.EventClass' class='EventClass'>
</object>
</object>
</objects>
